1.  public static String reverse(String s,int flag){
        if(flag<=0){
            return "";
        }else
            return  s.charAt(flag-1)+reverse(s,flag-1);
    }
    public static void main(String[] args) {
       String test="abcdefghijk";
       int flag=test.length();
        System.out.println(reverse(test,flag));
    }
2.

  public static int expr(List<String> list,List<String> opera){
      Stack<Integer> stack=new Stack<>();
      for (String s : list) {
          if (opera.contains(s)) {
              int num1 = stack.pop();
              int num2 = stack.pop();
              int sum = 0;
              if (s.equals("+")) sum = num2 + num1;
              if (s.equals("/")) sum = num2 / num1;
              if (s.equals("*")) sum = num2 * num1;
              if (s.equals("-")) sum = num2 - num1;
              stack.push(sum);
          } else
              stack.push(Integer.parseInt(s));
      }
      return stack.pop();
  }
    public static void main(String[] args) {
        Scanner scanner=new Scanner(System.in);
        List<String> list=new ArrayList<String>();
        while (!scanner.hasNext("end")){
            list.add(scanner.next());
        }
        scanner.close();
        List<String> opera=new ArrayList<String>();
        opera.add("+");
        opera.add("-");
        opera.add("/");
        opera.add("*");
        System.out.println(expr(list,opera));
    }
3.
  public static void main(String[] args) {
        int []a={3,1,4,1,5,9,2,6 };
        sort(a,0,a.length-1);
        for (int i: a) {
            System.out.println(i);
        }

    }
    public static int[] sort(int[] a,int low,int high){
        int mid = (low+high)/2;
        if(low<high){
            sort(a,low,mid);
            sort(a,mid+1,high);
            merge(a,low,mid,high);
        }
        return a;
    }

    public static void merge(int[] a, int low, int mid, int high) {
        int[] temp = new int[high-low+1];
        int i= low;
        int j = mid+1;
        int k=0;
        while(i<=mid && j<=high){
            if(a[i]<a[j]){
                temp[k++] = a[i++];
            }else{
                temp[k++] = a[j++];
            }
        }
        while(i<=mid){
            temp[k++] = a[i++];
        }
        while(j<=high){
            temp[k++] = a[j++];
        }
        for(int x=0;x<temp.length;x++){
            a[x+low] = temp[x];
        }
    }
    
4.
function UniquePay(list) {
    var arr = [list[0]];
    for (var i = 1; i <list.length; i++) {
        var s = list[i];
        var flag = false;
        for (var j = 0; j < arr.length; j++) {
            if (s.serial == arr[j].serial) {
                flag = true;
                break;
            }
        }
        if (!flag) {
            arr.push(s);
        }
    }
    return arr;
}
    
